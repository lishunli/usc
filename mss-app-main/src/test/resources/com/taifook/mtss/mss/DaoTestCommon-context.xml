<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:sa="http://sannotations.sourceforge.net/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
                            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
                            http://sannotations.sourceforge.net/context http://sannotations.sourceforge.net/context.xsd">


    <!--  Shared Data Source Setup -->
    <bean id="dataSource" class="com.taifook.mtss.framework.test.SharedDataSourceFactoryBean">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:mem:test;DB_CLOSE_DELAY=-1"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean id="genericDao.jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>
    <alias name="genericDao.jdbcTemplate" alias="mss.jdbcTemplate"/>

    <bean id="genericDao.classicJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>
    <alias name="genericDao.classicJdbcTemplate" alias="mss.classicJdbcTemplate"/>

    <!--  Shared Entity Manager Factory -->
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="false" />
        <property name="generateDdl" value="true" />
        <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
    </bean>

    <bean id="entityManagerFactory" class="com.taifook.mtss.framework.test.SharedLocalEntityManagerFactoryBean">
        <property name="shareId" value="DEPLOY_H2EMF"/>
        <property name="persistenceXmlLocation" value="classpath:/META-INF/mss-persistence.xml" />
        <property name="persistenceUnitName" value="mss" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.query.jpaql_strict_compliance" value="false" />
            </map>
       </property>
    </bean>

    <bean id="genericDao.entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <alias name="genericDao.entityManager" alias="entityManager"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
        <property name="defaultPersistenceUnitName" value="mss"/>
    </bean>
    <bean class="com.taifook.mtss.framework.dao.GenericDaoPersistenceExceptionTranslationPostProcessor"/>

    <!-- A simple transaction manager for our (single) EntityManagerFactory.  -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="extendedFinderNamingStrategy"
        class="com.taifook.mtss.framework.dao.finder.impl.ExtendedFinderNamingStrategy" />


    <!--  Dao Layer generic config-->

    <bean id="queryInterceptor"
        class="com.taifook.mtss.framework.dao.finder.impl.FinderIntroductionInterceptor" />

    <aop:config>
        <aop:aspect ref="queryInterceptor">
        <aop:pointcut id="getQuery"
                expression="execution(* com.taifook.mtss.mss..*Dao.get*(..)) and this(com.taifook.mtss.framework.dao.finder.FinderExecutor)" />
            <aop:pointcut id="findQuery"
                expression="execution(* com.taifook.mtss.mss..*Dao.find*(..)) and this(com.taifook.mtss.framework.dao.finder.FinderExecutor)" />
            <aop:pointcut id="listQuery"
                expression="execution(* com.taifook.mtss.mss..*Dao.list*(..,int,int)) and this(com.taifook.mtss.framework.dao.finder.FinderExecutor)" />
            <aop:around pointcut-ref="findQuery" method="invokeFind" />
            <aop:around pointcut-ref="listQuery" method="invokeFind" />
            <aop:around pointcut-ref="getQuery" method="invokeFind" />
        </aop:aspect>

    </aop:config>

    <bean id="abstractDaoTarget"
          class="com.taifook.mtss.framework.app.dao.impl.GenericModelDaoImpl" abstract="true">
        <property name="namingStrategy" ref="extendedFinderNamingStrategy" />
    </bean>

    <bean id="abstractVersionDaoTarget"
          class="com.taifook.mtss.framework.app.dao.impl.GenericVersionDaoImpl" abstract="true">
        <property name="namingStrategy" ref="extendedFinderNamingStrategy" />
    </bean>
</beans>
