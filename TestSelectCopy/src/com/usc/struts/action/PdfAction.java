/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.usc.struts.action;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Font;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.BaseFont;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import com.usc.dao.Student;
import com.usc.service.studentService;

/**
 * MyEclipse Struts Creation date: 06-19-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class PdfAction extends Action
{
	private studentService ss;

	public void setSs(studentService ss)
	{
		this.ss = ss;
	}

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	{

		BaseFont bfChinese = null;
		try
		{
			bfChinese = BaseFont.createFont("STSong-Light", "UniGB-UCS2-H",
					BaseFont.NOT_EMBEDDED);
		} catch (DocumentException e)
		{
			e.printStackTrace();
		} catch (IOException e)
		{
			e.printStackTrace();
		}
		Font FontChinese = new Font(bfChinese, 12, Font.NORMAL);
		try
		{
			Document document = new Document();
			ByteArrayOutputStream student = new ByteArrayOutputStream();
			try
			{
				PdfWriter.getInstance(document, student);
				document.open();
				PdfPTable table = new PdfPTable(5);
				table.setWidthPercentage(80f);
				PdfPCell h1 = new PdfPCell(new Paragraph("学号", FontChinese));
				PdfPCell h2 = new PdfPCell(new Paragraph("姓名", FontChinese));
				PdfPCell h3 = new PdfPCell(new Paragraph("性别", FontChinese));
				PdfPCell h4 = new PdfPCell(new Paragraph("年龄", FontChinese));
				PdfPCell h5 = new PdfPCell(new Paragraph("班级", FontChinese));
				table.setHeaderRows(1);
				table.addCell(h1);
				table.addCell(h2);
				table.addCell(h3);
				table.addCell(h4);
				table.addCell(h5);
				PdfPCell cell;
				List<Student> list = ss.getAllStudnet();
				for (int i = 0; i < list.size(); ++i)
				{
					Student stu = list.get(i);
					cell = new PdfPCell(
							new Paragraph(stu.getSno(), FontChinese));
					table.addCell(cell);
					cell = new PdfPCell(new Paragraph(stu.getSname(),
							FontChinese));
					table.addCell(cell);
					cell = new PdfPCell(
							new Paragraph(stu.getSex(), FontChinese));
					table.addCell(cell);
					cell = new PdfPCell(new Paragraph(stu.getAge().toString(),
							FontChinese));
					table.addCell(cell);
					cell = new PdfPCell(new Paragraph(stu.getGname(),
							FontChinese));
					table.addCell(cell);
				}
				document.add(table);

			} catch (DocumentException de)
			{
				System.err.println(de.getMessage());
			}
			document.close();

			response.setContentLength(student.size());
			OutputStream out = response.getOutputStream();
			response.setContentType("application/pdf");
			response.setHeader("Content-disposition",
					"attachment;filename=student.pdf");
			student.writeTo(out);
			out.flush();
			out.close();

		} catch (Throwable e)
		{
			e.printStackTrace();
		}

		return null;
	}
}