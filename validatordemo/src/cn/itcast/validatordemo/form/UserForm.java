/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package cn.itcast.validatordemo.form;

import java.util.Locale;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts.Globals;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.util.MessageResources;
import org.apache.struts.util.RequestUtils;
import org.apache.struts.validator.ValidatorActionForm;
import org.apache.struts.validator.ValidatorForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-02-2009
 * 
 * XDoclet definition:
 * @struts.form name="userForm"
 */
public class UserForm extends /*ActionForm*/ValidatorActionForm/*ValidatorForm*/ {
	/*
	 * Generated fields
	 */

	/** password property */
	private String password;

	/** name property */
	private String name;
	
	private String email;
	
	private String birthday;

	private String password2;
	/*
	 * Generated Methods
	 */
	private String idcard;
	
	public String getIdcard() {
		return idcard;
	}

	public void setIdcard(String idcard) {
		this.idcard = idcard;
	}

	public String getPassword2() {
		return password2;
	}

	public void setPassword2(String password2) {
		this.password2 = password2;
	}

	public String getBirthday() {
		return birthday;
	}

	public void setBirthday(String birthday) {
		this.birthday = birthday;
	}

	/** 
	 * Method validate
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	/*public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		ActionErrors errors = new ActionErrors();
		MessageResources resources = (MessageResources) request.getAttribute(Globals.MESSAGES_KEY);
		Locale locale = RequestUtils.getUserLocale(request, null);
		if(name==null ||name.trim().equals(""))
		{

			errors.add("username", new ActionMessage("errors.required",
					resources.getMessage(locale,"prompt.username")		
				));
		}
		if(password==null || password.length()<3)
		{
			errors.add("password", new ActionMessage("errors.minlength",
					resources.getMessage(locale,"prompt.password"),3		
				));			
		}else if(password.length()>6)
		{
			errors.add("password", new ActionMessage("errors.maxlength",
					resources.getMessage(locale,"prompt.password"),6		
				));
			
		}
		return errors;
	}
	*/
	/** 
	 * Returns the password.
	 * @return String
	 */
	public String getPassword() {
		return password;
	}

	/** 
	 * Set the password.
	 * @param password The password to set
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/** 
	 * Returns the name.
	 * @return String
	 */
	public String getName() {
		return name;
	}

	/** 
	 * Set the name.
	 * @param name The name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
}