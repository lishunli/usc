<beans>

	<!-- Allows us to use system properties as variables in this configuration file -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" />

	<broker xmlns="http://activemq.org/config/1.0" brokerName="localhost" dataDirectory="c:/activemq_data">

		<!-- Destination specific policies using destination names or wildcards -->
		<destinationPolicy>
			<policyMap>
				<policyEntries>
					<policyEntry topic="FOO.>" producerFlowControl="false" memoryLimit="10mb">
						<dispatchPolicy>
							<strictOrderDispatchPolicy />
						</dispatchPolicy>
						<subscriptionRecoveryPolicy>
							<lastImageSubscriptionRecoveryPolicy />
						</subscriptionRecoveryPolicy>
					</policyEntry>

				</policyEntries>
			</policyMap>
		</destinationPolicy>


		<!-- The transport connectors ActiveMQ will listen to -->
		<transportConnectors>
			<transportConnector name="openwire" uri="tcp://localhost:61616" discoveryUri="multicast://default" />
			<!--transportConnector name="ssl" uri="ssl://localhost:61617"/> <transportConnector name="stomp" uri="stomp://localhost:61613"/> <transportConnector name="xmpp" uri="xmpp://localhost:61222"/ -->
		</transportConnectors>

		<!-- The store and forward broker networks ActiveMQ will listen to -->
		<networkConnectors>
			<!-- by default just auto discover the other brokers -->
			<networkConnector name="default-nc" uri="multicast://default" />
			<!-- <networkConnector name="host1 and host2" uri="static://(tcp://host1:61616,tcp://host2:61616)"/> -->
		</networkConnectors>


		<!-- Use the following if you wish to configure the journal with JDBC -->
		<!-- <persistenceAdapter> <journaledJDBC journalLogFiles="5" dataDirectory="${activemq.base}/activemq-data" dataSource="#postgres-ds"/> </persistenceAdapter> -->

		<!-- Or if you want to use pure JDBC without a journal -->
		<!-- <persistenceAdapter> <jdbcPersistenceAdapter dataSource="#postgres-ds"/> </persistenceAdapter> -->

		<!-- Use the following to set the broker memory limit <systemUsage> <systemUsage> <memoryUsage> <memoryUsage limit="10 mb" percentUsageMinDelta="20"/> </memoryUsage> <tempUsage> <tempUsage limit="100 mb"/> </tempUsage> <storeUsage> <storeUsage limit="1 gb" name="foo"/> </storeUsage> </systemUsage> </systemUsage> -->

		<!-- Use the following to configure how ActiveMQ is exposed in JMX <managementContext> <managementContext connectorPort="1099" jmxDomainName="org.apache.activemq"/> </managementContext> -->

	</broker>


	<!-- This xbean configuration file supports all the standard spring xml configuration options -->

	<!-- Postgres DataSource Sample Setup -->
	<!-- <bean id="postgres-ds" class="org.postgresql.ds.PGPoolingDataSource"> <property name="serverName" value="localhost"/> <property name="databaseName" value="activemq"/> <property name="portNumber" value="0"/> <property name="user" value="activemq"/> <property name="password" value="activemq"/> <property name="dataSourceName"
		value="postgres"/> <property name="initialConnections" value="1"/> <property name="maxConnections" value="10"/> </bean> -->

	<!-- MySql DataSource Sample Setup -->
	<!-- <bean id="mysql-ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> <property name="driverClassName" value="com.mysql.jdbc.Driver"/> <property name="url" value="jdbc:mysql://localhost/activemq?relaxAutoCommit=true"/> <property name="username" value="activemq"/> <property name="password" value="activemq"/>
		<property name="poolPreparedStatements" value="true"/> </bean> -->

	<!-- Oracle DataSource Sample Setup -->
	<!-- <bean id="oracle-ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> <property name="url" value="jdbc:oracle:thin:@localhost:1521:AMQDB"/> <property name="username" value="scott"/> <property name="password" value="tiger"/>
		<property name="poolPreparedStatements" value="true"/> </bean> -->

	<!-- Embedded Derby DataSource Sample Setup -->
	<!-- <bean id="derby-ds" class="org.apache.derby.jdbc.EmbeddedDataSource"> <property name="databaseName" value="derbydb"/> <property name="createDatabase" value="create"/> </bean> -->

</beans>