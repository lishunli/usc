/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.usc.struts.action;

import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sun.org.apache.bcel.internal.generic.RET;
import com.usc.dao.User;
import com.usc.service.UsersManager;
import com.usc.struts.form.RegisterForm;

/**
 * MyEclipse Struts Creation date: 06-26-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/register" name="registerForm" input="/register.jsp"
 *                scope="request" validate="true"
 */
public class RegisterAction extends Action
{
	private User u;
	private UsersManager um;

	public void setU(User u)
	{
		this.u = u;
	}

	public void setUm(UsersManager um)
	{
		this.um = um;
	}

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	{
		System.out.println("execute");
		// try
		// {
		// response.setContentType("text/html;charset=utf-8");
		// PrintWriter out = response.getWriter();
		//
		// // 1.取参数
		// String old = request.getParameter("username");
		// String name = URLDecoder.decode(old, "UTF-8");
		// System.out.println("username:"+name);
		// if(!um.checkUserName(name))
		// {
		// System.out.println("exist");
		// // 4。和传统应用不同之处。这一步需要将用户感兴趣的数据返回给页面段，而不是将一个新的页面发送给用户
		// // 写法没有变化，本质发生了改变
		// out.println("username exist");
		// } else
		// {
		// System.out.println("not exist");
		// out.println("username not exist,you can use it");
		// }
		// } catch (Exception e)
		// {
		// e.printStackTrace();
		// }
		//		
		//		
		// try {
		// request.setCharacterEncoding("gb2312");
		// } catch (UnsupportedEncodingException e) {
		// e.printStackTrace();
		// }
		// try{
		// String msgStr="";
		// response.setContentType("text/xml;charset=GB2312");
		// response.setHeader("Cache-Control","no-cache");
		// String name=(String)request.getParameter("name");
		// System.out.println("name = "+name);
		// if(!um.checkUserName(name)){ //找查数据库中有无该用户名
		// msgStr ="exist";
		// }else{
		// msgStr ="not exist";
		// }
		//response.getWriter().println("<?xml version='1.0' encoding='GB2312' ?>"
		// );
		// response.getWriter().println("<root>");
		// response.getWriter().println("<content>");
		// response.getWriter().print(msgStr);
		// response.getWriter().println("</content>");
		// response.getWriter().println("<test>");
		// response.getWriter().println("test");
		// response.getWriter().println("</test>");
		// response.getWriter().println("</root>");
		// response.getWriter().close();
		// }catch(Exception ex){
		//
		// }
		try
		{
			request.setCharacterEncoding("utf-8");
		} catch (Exception e)
		{
			e.printStackTrace();
		}
		try
		{
			String msgStr = "";
			response.setContentType("text/xml;charset=GB2312");
			response.setHeader("Cache-Control", "no-cache");
			String name = (String) request.getParameter("name");
			System.out.println("name = " + name);
			// if("gong".equals(name)){ //找查数据库中有无该用户名
			if (!um.checkUserName(name))
			{
				msgStr = "对不起,此用户名已经存在,请更换用户名注册!";
			} else
			{
				msgStr = "用户未被注册,可以使用!";
			}
			response.getWriter().println(
					"<?xml version='1.0' encoding='GB2312' ?>");
			response.getWriter().println("<root>");
			response.getWriter().println("<content>");
			response.getWriter().print(msgStr);
			response.getWriter().println("</content>");
			response.getWriter().println("</root>");
			response.getWriter().close();
		} catch (Exception ex)
		{
			ex.printStackTrace();
		}

		RegisterForm registerForm = (RegisterForm) form;// TODO Auto-generated

		if (null == registerForm.getUsername()
				|| null == registerForm.getPassword()
				|| null == registerForm.getRepassword()
				|| 0 == registerForm.getUsername().trim().length()
				|| 0 == registerForm.getPassword().trim().length()
				|| 0 == registerForm.getRepassword().trim().length())
		{
			return mapping.findForward("input");
		}

		else if (registerForm.getPassword().trim().equals(
				registerForm.getRepassword().trim())
				&& um.checkUserName(registerForm.getUsername()))
		{
			u.setUsername(registerForm.getUsername().trim());
			u.setPassword(um.encoderByMd5(registerForm.getPassword().trim()));
			um.addUser(u);
			return mapping.findForward("success");
		}
		return mapping.findForward("input");
	}
}